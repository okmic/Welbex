{"version":3,"sources":["components/Posts.js","components/Pagination.js","App.js","index.js"],"names":["Posts","_ref","posts","loading","react_default","a","createElement","className","map","post","key","id","date","title","amount","distance","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","react_router_dom","to","onClick","href","App1","_useState","useState","_useState2","Object","slicedToArray","setPosts","_useState3","_useState4","setLoading","_useState5","_useState6","currentPage","setCurrentPage","_useState7","useEffect","asyncToGenerator","regenerator_default","mark","_callee","res","newData","wrap","_context","prev","next","axios","get","sent","data","floor","random","stop","apply","this","arguments","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","components_Pagination","length","pageNumber","components_Posts","App","Fragment","react_router","path","element","App_App1","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d61d843a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Posts = ({ posts, loading }) => {\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='list-group mb-4'>\r\n      {posts.map(post => (\r\n        <div key={post.id}>\r\n          <li className='list-group-item'>\r\n            {post.date}\r\n          </li>\r\n          <li className='list-group-item'>\r\n            {post.title}\r\n          </li>\r\n          <li className='list-group-item'>\r\n            {post.amount}\r\n          </li>\r\n          <li className='list-group-item'>\r\n            {post.distance}\r\n          </li>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className='page-item'>\r\n            <NavLink to=\"\">\r\n              <a onClick={() => paginate(number)} href='!#' className='page-link'>\r\n                {number}\r\n              </a>\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Posts from './components/Posts';\r\nimport Pagination from './components/Pagination';\r\nimport axios from 'axios';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\r\n\r\nconst App1 = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(10)\r\n\r\n\r\n  const updateData = (data) => {\r\n// Data generation\r\n    return data.map(i => ({\r\n      id: i.id,\r\n      date: \"0\" + (Math.floor(Math.random() * 7) + 1) +  \".0\" + (Math.floor(Math.random() * 8) + 1) + \".2021\",\r\n      title: i.title,\r\n      amount: Math.floor(Math.random() * 7) + 1,\r\n      distance: Math.floor(Math.random() * 7) + 1\r\n    })) \r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n      const newData = updateData(res.data)\r\n      setPosts(newData)\r\n      setLoading(false)\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className='container mt-5'>\r\n      <h1 className='text-primary mb-3'>My Blog</h1>\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n      />\r\n      <Posts posts={currentPosts} loading={loading} />\r\n    </div>\r\n\r\n  );\r\n};\r\nconst App = () => {\r\n\r\n  return <>\r\n  <BrowserRouter>\r\n    <Routes>\r\n      \r\n      <Route path=\"*\" element={<App1/>} />\r\n  \r\n    </Routes>\r\n  </BrowserRouter>\r\n\r\n  </>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}